section  .text
   global _start         ;must be declared for using gcc

_start:                   ;tell linker entry point

   mov eax, 4
   mov ebx, 1
   mov ecx, userMsg
   mov edx, lenUserMsg
   int 80h

   ;Read and store the user input
   mov eax, 3
   mov ebx, 2
   mov ecx, num1  
   mov edx, 5          ;5 bytes (numeric, 1 for sign) of that information
   int 80h

   mov eax, 4
   mov ebx, 1
   mov ecx, userMsg
   mov edx, lenUserMsg
   int 80h

   ;Read and store the user input
   mov eax, 3
   mov ebx, 2
   mov ecx, num2 
   mov edx, 5          ;5 bytes (numeric, 1 for sign) of that information
   int 80h


   mov eax, 4
   mov ebx, 1
   mov ecx, userMsg
   mov edx, lenUserMsg
   int 80h

   ;Read and store the user input
   mov eax, 3
   mov ebx, 2
   mov ecx, num3 
   mov edx, 5          
   int 80h


   mov   ecx, [num1]
   cmp   ecx, [num2]
   jl    check_third_num
   mov   ecx, [num2]
   
check_third_num:

   cmp   ecx, [num3]
   jl    _exit
   mov   ecx, [num3]
   
_exit:
   
   mov   [smallest], ecx
   mov   ecx,msg
   mov   edx, len
   mov   ebx,1 
   mov   eax,4 
   int   0x80  
   
   mov   ecx,smallest
   mov   edx, 2
   mov   ebx,1 
   mov   eax,4 
   int   0x80  
    
   mov   eax, 1
   int   80h

section  .data
   
   msg db "The smallest digit is: "
   len equ $- msg 
   userMsg db 'Please enter a number: ' 
   lenUserMsg equ $-userMsg             


segment .bss
   smallest resd 10
   num1 resd 10
   num2 resd 10
   num3 resd 10