using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.ServiceProcess;
using System.Text;
using System.Threading.Tasks;
using System.Timers;
using System.ServiceProcess;

namespace Lab2_Task2
{
    public partial class Service1 : ServiceBase
    {
        public Service1()
        {
            InitializeComponent();
        }

        Timer timer = new Timer();
        
        protected override void OnStart(string[] args)
        {
            timer.Elapsed += new ElapsedEventHandler(OnElapsedTime);
            timer.Interval = 5000; //number in milisecinds 
            timer.Enabled = true;
        }
        protected override void OnStop()
        {

        }
        private void OnElapsedTime(object source, ElapsedEventArgs e)
        {
            /*ServiceController sv = new ServiceController("Lab 2 - Task 1");
            if ((sv.Status.Equals(ServiceControllerStatus.Stopped)) || (sv.Status.Equals(ServiceControllerStatus.StopPending)))
            {
                WriteToFile("The " + sv.DisplayName + " is stopped at " + DateTime.Now);
                sv.Start();
            }
            else
            {
                WriteToFile("The " + sv.DisplayName + " is started at " + DateTime.Now);
                sv.Stop();
            }
            sv.Refresh();*/

            Process[] pc = Process.GetProcessesByName("notepad");

            if (pc.Length == 0)
            {
                WriteToFile("Notepad is stopped at " + DateTime.Now);
                Process.Start("C:\\Windows\\system32\\notepad.exe");
            }
            else
            {
                WriteToFile("Notepad is started at " + DateTime.Now);
                foreach (Process p in pc)
                {
                    p.Kill();
                    p.WaitForExit();
                    p.Dispose();
                }
            }
        }
        public void WriteToFile(string Message)
        {
            string path = AppDomain.CurrentDomain.BaseDirectory + "\\Logs";
            if (!Directory.Exists(path))
            {
                Directory.CreateDirectory(path);
            }

            string filepath = AppDomain.CurrentDomain.BaseDirectory + "\\Logs\\ServiceLog_" + DateTime.Now.Date.ToShortDateString().Replace('/', '_') + ".txt";

            if (!File.Exists(filepath))
            {
                // Create a file to write to. 
                using (StreamWriter sw = File.CreateText(filepath))
                {
                    sw.WriteLine(Message);
                }
            }
            else
            {
                using (StreamWriter sw = File.AppendText(filepath))
                {
                    sw.WriteLine(Message);
                }
            }
        }
    }
}