using System;
using System.ServiceProcess;
using System.Threading;
using System.Runtime.InteropServices;

namespace SIDPopup
{
    public partial class Service1 : ServiceBase
    {
        public Service1()
        {
            this.CanHandleSessionChangeEvent = true;
            InitializeComponent();
        }

        //library
        [DllImport("wtsapi32.dll", SetLastError = true)]
        static extern void WTSSendMessage(
                IntPtr hServer,
                [MarshalAs(UnmanagedType.I4)] int SessionId,
                String pTitle,
                [MarshalAs(UnmanagedType.U4)] int TitleLength,
                String pMessage,
                [MarshalAs(UnmanagedType.U4)] int MessageLength,
                [MarshalAs(UnmanagedType.U4)] int Style,
                [MarshalAs(UnmanagedType.U4)] int Timeout,
                [MarshalAs(UnmanagedType.U4)] out int pResponse,
                bool bWait
            );

        protected override void OnSessionChange(SessionChangeDescription changeDescription)
        {
            if (changeDescription != null && (changeDescription.Reason == SessionChangeReason.SessionLogon || changeDescription.Reason == SessionChangeReason.SessionUnlock)) {
                for (int s = 0; s < 10; s++) {
                    Thread thrd = new Thread(() => {
                        try {
                            String title = "Your Student ID!!!";
                            String msg = "19522445-nh4ttruong ~ 19521336-datnlq ~ 19520053-dr00py";
                            int resp;
                            WTSSendMessage(
                                IntPtr.Zero,
                                s,
                                title,
                                title.Length,
                                msg,
                                msg.Length,
                                0,
                                0,
                                out resp,
                                true
                            );
                        }
                        catch {
                        }
                    });

                    thrd.SetApartmentState(ApartmentState.STA);
                    thrd.Start();
                }
                base.OnSessionChange(changeDescription);
            }
        }
    }
}